{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9478577c27226b6B5df50db8eCF31822590aA2DA",
    "txHash": "0x9bbe0b0f85e1b23befacda88c937c086296a5c67f4810194f703a1baa46a7611"
  },
  "proxies": [
    {
      "address": "0x85B576946b9533451c977c991E8970f9B4345652",
      "txHash": "0x38544a224c3f3141d360f82928ab7c850b0ab1aadacb7e8d771c2fcebfc3349b",
      "kind": "transparent"
    },
    {
      "address": "0xd20466FcfE69EB409B9758871f24f94C347300F2",
      "txHash": "0x09c92db80fe43bc0f0d70b89dffea4b01b2d8c0aa1fa7150ee0f17f208365930",
      "kind": "transparent"
    },
    {
      "address": "0xA6Cb33E769370646AA6AD1250A5C4F7BeFD2713B",
      "txHash": "0x55c963a42239b82b2dbd3363b1a2502fca43478c262680f4a5cf496a916258f6",
      "kind": "transparent"
    },
    {
      "address": "0x8f723c1fbEDD6B7d389e2B610d947967c2CE4Ff6",
      "txHash": "0xf768b046e39453944ff159bb92f59d03d60f3a8c7d14455ee9901c3eae81fc9a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cd2a4b0285f3deb94b343e8d563a638d49e74b6e04774f5888e831bcdadf9aa1": {
      "address": "0x0Cba484D04766b7BC9F60CDcdAAe81C599448f13",
      "txHash": "0xf7750eefff9cba8384c134ec161505c2088949356e081296751e2e4236141e56",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TestToken300423",
            "src": "contracts/__MOCKS__/TestToken300423.sol:5"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "TestToken300423",
            "src": "contracts/__MOCKS__/TestToken300423.sol:6"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "04bf680bad9a76a1014feb6e4fd9d90e2d8486147f1fc9a51de2d4fa1fab7afb": {
      "address": "0xB2F75463beB978efA8ba6b5A72ae1091A762f569",
      "txHash": "0x6c61268e289b89c9561ad9610608d6826ae8c86b17bceac1a0d8fd0b74cbde9f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "ravendale",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(ITestNFT)3994",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:11"
          },
          {
            "label": "WV",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(ITestNFT)3994",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:12"
          },
          {
            "label": "TREASURY",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:14"
          },
          {
            "label": "AUTHORISED_SIGNER",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:15"
          },
          {
            "label": "MAX_MINTS_PER_TOKEN_RD",
            "offset": 20,
            "slot": "206",
            "type": "t_uint8",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:17"
          },
          {
            "label": "MAX_MINTS_PER_SPOT_VL",
            "offset": 21,
            "slot": "206",
            "type": "t_uint8",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:18"
          },
          {
            "label": "MAX_MINTS_PER_ADDR_PUBLIC",
            "offset": 22,
            "slot": "206",
            "type": "t_uint16",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:20"
          },
          {
            "label": "MAX_AMOUNT_FOR_SALE",
            "offset": 24,
            "slot": "206",
            "type": "t_uint16",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:21"
          },
          {
            "label": "AVAILABLE_AMOUNT_FOR_VL",
            "offset": 26,
            "slot": "206",
            "type": "t_uint16",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:22"
          },
          {
            "label": "SIGNATURE_VALIDITY",
            "offset": 28,
            "slot": "206",
            "type": "t_uint16",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:23"
          },
          {
            "label": "START_TIME_RD",
            "offset": 0,
            "slot": "207",
            "type": "t_uint32",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:25"
          },
          {
            "label": "END_TIME_RD",
            "offset": 4,
            "slot": "207",
            "type": "t_uint32",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:26"
          },
          {
            "label": "START_TIME_VL",
            "offset": 8,
            "slot": "207",
            "type": "t_uint32",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:27"
          },
          {
            "label": "END_TIME_VL",
            "offset": 12,
            "slot": "207",
            "type": "t_uint32",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:28"
          },
          {
            "label": "START_TIME_PUBLIC",
            "offset": 16,
            "slot": "207",
            "type": "t_uint32",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:29"
          },
          {
            "label": "END_TIME_PUBLIC",
            "offset": 20,
            "slot": "207",
            "type": "t_uint32",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:30"
          },
          {
            "label": "PRICE",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:32"
          },
          {
            "label": "amountSold",
            "offset": 0,
            "slot": "209",
            "type": "t_uint16",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:34"
          },
          {
            "label": "rdMintsBy",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:35"
          },
          {
            "label": "vlMintsBy",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:36"
          },
          {
            "label": "publicMintsBy",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:37"
          },
          {
            "label": "tokensLockedBy",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:38"
          },
          {
            "label": "lockerOf",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:39"
          },
          {
            "label": "isSignatureUsed",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "TestMintController",
            "src": "contracts/TestMintController.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ITestNFT)3994": {
            "label": "contract ITestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "240c954419b080d7500b819978c19cf0c5cd1d5dd822d87bd1441e43d6009526": {
      "address": "0x35eC800cA08aA7A2d0aeEA1bAdF595FE9f1E6dD3",
      "txHash": "0xc780b018259ee6a73b621940be777c389122546059143ef39596631f701ed933",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:67"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:70"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:73"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:76"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)6222_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:81"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(AddressData)6231_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:84"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:87"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/utils/ERC721AUpgradeable.sol:90"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "159",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "160",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_isOperatorFilterRegistryRevoked",
            "offset": 0,
            "slot": "211",
            "type": "t_bool",
            "contract": "RevokableOperatorFiltererUpgradeable",
            "src": "contracts/OpenseaRegistries/RevokableOperatorFiltererUpgradeable.sol:17"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "212",
            "type": "t_string_storage",
            "contract": "TestVault",
            "src": "contracts/TestVault.sol:18"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "TestVault",
            "src": "contracts/TestVault.sol:19"
          },
          {
            "label": "isController",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TestVault",
            "src": "contracts/TestVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)6231_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)6222_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)6231_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)6222_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
